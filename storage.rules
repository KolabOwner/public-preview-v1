rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Existing rules for backward compatibility
    // Users can only upload/access their own files
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Resume files - organized by user
    match /resumes/{userId}/{resumeId}/{fileName} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
      
      // File size limit: 10MB
      allow write: if request.resource.size < 10 * 1024 * 1024;
    }
    
    // Temporary upload storage
    match /temp/{userId}/{fileName} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
      
      // Temporary files expire - implement cleanup function
      allow write: if request.resource.size < 10 * 1024 * 1024;
    }
    
    // Profile pictures
    match /profiles/{userId}/{fileName} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
      
      // 5MB limit for profile pictures
      allow write: if request.resource.size < 5 * 1024 * 1024;
      
      // Only allow image files
      allow write: if request.resource.contentType.matches('image/.*');
    }
    
    // Public assets (read-only)
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false; // Only admins can upload public assets
    }
    
    // ============== ENTERPRISE STORAGE RULES ==============
    
    // Enterprise processing uploads
    match /resume-processing/uploads/{userId}/{allPaths=**} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId
        && request.resource.size < 50 * 1024 * 1024 // 50MB limit
        && request.resource.contentType.matches('application/pdf|text/.*|image/.*');
    }
    
    // Enterprise processing results
    match /resume-processing/results/{userId}/{allPaths=**} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only cloud functions can write
    }
    
    // Temporary access with metadata-based expiration
    match /resume-processing/temporary/{userId}/{fileId} {
      allow read: if request.auth != null 
        && request.auth.uid == userId
        && (!resource.metadata.expiresAt || request.time < resource.metadata.expiresAt);
    }
    
    // Staging area for cloud functions
    match /resume-processing/staging/{allPaths=**} {
      allow read, write: if false; // Only cloud functions can access
    }
  }
}